import clsx from "clsx";
import { useRef, type FC } from "react";
import style from "./Popup.module.scss";
import { useAppDispatch, useAppSelector } from "../../app/hooks";
import {
  closeAllPopups,
  selectPopupState,
} from "../../app/reducers/popupSlice";
import PopupForm from "../PopupForm/PopupForm";

const Popup: FC = () => {
  const ref = useRef<HTMLDivElement>(null);
  const isOpen = useAppSelector(selectPopupState);
  const dispatch = useAppDispatch();

  const checkOutsideClick = (e: React.MouseEvent<HTMLElement>) => {
    const target = e.target as HTMLDivElement;
    if (ref.current && !ref.current.contains(target)) {
      dispatch(closeAllPopups());
    }
  };

  const closePopup = () => {
    dispatch(closeAllPopups());
  };

  return (
    <div
      className={clsx(style.popup, {
        [style.popup__opened]: isOpen,
      })}
      onClick={checkOutsideClick}
    >
      <div className={clsx(style.popup__container)} ref={ref}>
        <button
          className={clsx(style.popup__close)}
          type="button"
          aria-label="–ó–∞–∫—Ä—ã—Ç—å"
          onClick={closePopup}
        ></button>
        <p className={clsx(style.popup__promo)}>–≥–æ—Ä—è—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</p>
        <h2 className={clsx(style.popup__title)}>
          –ù–µ —É–ø—É—Å—Ç–∏ —Å–≤–æ–π <span>–ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å</span>
        </h2>
        <p className={clsx(style.popup__subtitle)}>
          –ú—ã –∑–Ω–∞–µ–º, –∫–∞–∫ —Ç—Ä—É–¥–Ω–æ –Ω–∞—á–∞—Ç—å.. <span>–ü–æ—ç—Ç–æ–º—É!</span>
        </p>
        <p className={clsx(style.popup__present)}>
          –î–∞—Ä–∏–º —Å–∫–∏–¥–∫—É –¥–ª—è <span>–ª—ë–≥–∫–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞</span> üèÉ‚Äç‚ôÇÔ∏è
        </p>
        <p className={clsx(style.popup__text)}>
          –ü–æ—Å–º–æ—Ç—Ä–∏, —á—Ç–æ –º—ã –¥–ª—è —Ç–µ–±—è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ üî•
        </p>
        <PopupForm />
      </div>
    </div>
  );
};
export default Popup;
